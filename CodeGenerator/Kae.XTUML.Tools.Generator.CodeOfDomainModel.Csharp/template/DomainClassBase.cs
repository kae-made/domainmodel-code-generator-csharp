// ------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン: 17.0.0.0
//  
//     このファイルへの変更は、正しくない動作の原因になる可能性があり、
//     コードが再生成されると失われます。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp.template
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Kae.CIM.MetaModel.CIMofCIM;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class DomainClassBase : DomainClassBaseBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("// ------------------------------------------------------------------------------" +
                    "\r\n// <auto-generated>\r\n//     This file is generated by tool.\r\n//     Runtime Ve" +
                    "rsion : ");
            
            #line 10 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(version));
            
            #line default
            #line hidden
            this.Write(@"
//  
//     Updates this file cause incorrect behavior 
//     and will be lost when the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Kae.StateMachine;

namespace ");
            
            #line 21 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nameSpace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 23 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

    var domainClassName = GeneratorNames.GetDomainClassName(objDef);
    var domainBaseInterfaceName = GeneratorNames.GetDomainClassBaseInterfaceName();
    var subClassInterfaces = DomainClassDefs.GetSubClassInterfaces(objDef);
    var domainClassBaseName = GeneratorNames.GetDomainClassImplName(objDef);
    string stateMachineLocalVariableName = "stateMachine";

            
            #line default
            #line hidden
            this.Write("    public partial class ");
            
            #line 30 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(domainClassBaseName));
            
            #line default
            #line hidden
            this.Write(" : ");
            
            #line 30 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(domainClassName));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        private static readonly string className = \"");
            
            #line 32 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(objDef.Attr_Key_Lett));
            
            #line default
            #line hidden
            this.Write("\";\r\n        public string ClassName { get { return className; } }\r\n\r\n        Inst" +
                    "anceRepository instanceRepository;\r\n\r\n");
            
            #line 37 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

    bool hasStateMachine = false;
    var ismDef = objDef.LinkedFromR518();
    if (ismDef != null)
    {
        hasStateMachine = true;
    }

    var implAttrDefs = new List<AttributeDef>();
    var attrDefs = objDef.LinkedFromR102();
    foreach (var attrDef in attrDefs)
    {
        var implAttrDef = new AttributeDef() { AttrDef = attrDef, IsIdentity = false, IsReferential = false, IsUniqueId = false, IsState = false };
        var attrPropName = GeneratorNames.GetAttrPropertyName(attrDef);
        var dtDef = DomainDataTypeDefs.GetBaseDT(attrDef);
        var attrPropDataTypeName = DomainDataTypeDefs.GetDataTypeName(dtDef);
        implAttrDef.DataTypeName = attrPropDataTypeName;
        bool generate = true;
        if (hasStateMachine)
        {
            if (dtDef.Attr_Name == "state<State_Model>")
            {
                implAttrDef.IsState = true;
            }
        }

        var subAttrDef = attrDef.SubClassR106();
        if (subAttrDef is not CIMClassO_RATTR)
        {
            var oidaDefs = attrDef.LinkedOneSideR105();
            foreach (var oidaDef in oidaDefs)
            {
                var oidDef = oidaDef.LinkedOneSideR105();
                implAttrDef.IsIdentity = true;
                if (dtDef.Attr_Name == "unique_id")
                {
                    implAttrDef.IsUniqueId = true;
                }
            }
        }
        else
        {
            implAttrDef.IsReferential = true;
        }
        implAttrDefs.Add(implAttrDef);
    }
    // Constructor Gen
    string constructorArgs = "";
    foreach (var implAttrDef in implAttrDefs)
    {
        if (!implAttrDef.IsReferential)
        {
            if (!string.IsNullOrEmpty(constructorArgs))
            {
                constructorArgs += ", ";
            }
            constructorArgs += implAttrDef.AttrDef.Attr_Name;
        }
    }
    // Constructor Signature

            
            #line default
            #line hidden
            this.Write("        public static ");
            
            #line 98 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(domainClassBaseName));
            
            #line default
            #line hidden
            this.Write(" CreateInstance(InstanceRepository instanceRepository)\r\n        {\r\n            va" +
                    "r newInstance = new ");
            
            #line 100 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(domainClassBaseName));
            
            #line default
            #line hidden
            this.Write("(instanceRepository);\r\n            instanceRepository.Add(newInstance);\r\n\r\n      " +
                    "      return newInstance;\r\n        }\r\n\r\n        public ");
            
            #line 106 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(domainClassBaseName));
            
            #line default
            #line hidden
            this.Write("(InstanceRepository instanceRepository)\r\n        {\r\n            this.instanceRepo" +
                    "sitory = instanceRepository;\r\n");
            
            #line 109 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

    // Constructor Body
    foreach(var implAttrDef in implAttrDefs)
    {
        string propName = GeneratorNames.GetAttrPropertyName(implAttrDef.AttrDef);
        string propLocalName = GeneratorNames.GetAttrPropertyLocalName(implAttrDef.AttrDef);
        if (implAttrDef.IsIdentity && (implAttrDef.IsReferential == false))
        {
            if (implAttrDef.IsUniqueId)
            {
                var newGuid = Guid.NewGuid().ToString();

            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 121 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propLocalName));
            
            #line default
            #line hidden
            this.Write(" = Guid.NewGuid().ToString();\r\n");
            
            #line 122 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

            }
        }
        else
        {
            if (implAttrDef.IsState)
            {
                string stateMachineClassName = GeneratorNames.GetStateMachineClassName(objDef);

            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 131 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineLocalVariableName));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 131 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineClassName));
            
            #line default
            #line hidden
            this.Write("(this);\r\n");
            
            #line 132 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

            }
        }
    }

            
            #line default
            #line hidden
            this.Write("        }\r\n");
            
            #line 138 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"


    // local member Attr Gen
    if (implAttrDefs.Count()>0)
    {

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 145 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

    }
    foreach(var implAttrDef in implAttrDefs)
    {
        if (!implAttrDef.IsState)
        {
            var dtDef = DomainDataTypeDefs.GetBaseDT(implAttrDef.AttrDef);
            var attrPropDataTypeName = DomainDataTypeDefs.GetDataTypeName(dtDef);
            string localVarName = GeneratorNames.GetAttrPropertyLocalName(implAttrDef.AttrDef);

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 155 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attrPropDataTypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 155 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localVarName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 156 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

        }
        else
        {
            string stateMachineClassName = GeneratorNames.GetStateMachineClassName(objDef);

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 162 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineClassName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 162 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineLocalVariableName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 163 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

        }
    }
    // property implementation
    if (implAttrDefs.Count()>0)
    {

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 171 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

    }
    foreach(var implAttrDef in implAttrDefs)
    {
        var dtDef = DomainDataTypeDefs.GetBaseDT(implAttrDef.AttrDef);
        var attrPropDataTypeName = DomainDataTypeDefs.GetDataTypeName(dtDef);
        string localVarName = GeneratorNames.GetAttrPropertyLocalName(implAttrDef.AttrDef);
        string propName = GeneratorNames.GetAttrPropertyName(implAttrDef.AttrDef);
        string accessorImple = "";
        if (implAttrDef.IsState)
        {
            accessorImple = "get { " + $"return {stateMachineLocalVariableName}.CurrentState;" + " }";
        }
        else
        {
            accessorImple = "get { " + $"return {localVarName}" + "; }";
        }
        if (!implAttrDef.IsReferential)
        {
            if (!implAttrDef.IsState)
            {
                accessorImple += " set { " + $"{localVarName} = value" + "; }";
            }
        }

            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 196 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attrPropDataTypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 196 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propName));
            
            #line default
            #line hidden
            this.Write(" { ");
            
            #line 196 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(accessorImple));
            
            #line default
            #line hidden
            this.Write(" }\r\n");
            
            #line 197 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

    }

    var joinedRgos = DomainClassDefs.GetJoinedRGOs(objDef);
    if (joinedRgos.Count()>0)
    {

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 205 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

    }
    foreach (var rgo in joinedRgos)
    {
        var subRgo = rgo.SubClassR205();
        if (subRgo is CIMClassR_FORM)
        {
            var rformDef = (CIMClassR_FORM)subRgo;
            var rsimpDef = rformDef.LinkedToR208();
            var relDef = rsimpDef.CIMSuperClassR_REL();
            var partDefs = rsimpDef.LinkedFromR207();
            if (partDefs.Count() > 0)
            {
                if (partDefs.Count() > 1)
                {
                    // TODO: ???
                }
                var partDef = partDefs.First();
                var targetObjDef = partDef.CIMSuperClassR_RTO().LinkedToR109().LinkedToR104();
                var targetClassName = GeneratorNames.GetDomainClassName(targetObjDef);
                if (partDef.Attr_Mult == 0)
                {
                    string relVarName = GeneratorNames.GetRelLocalVariableName(relDef, targetObjDef, partDef.Attr_Txt_Phrs);

            
            #line default
            #line hidden
            this.Write("        private ");
            
            #line 229 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetClassName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 229 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 230 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                }
            }
        }
        else if (subRgo is CIMClassR_SUB)
        {
            var rsupDef = (CIMClassR_SUB)subRgo;
            var rsubsupDef = rsupDef.LinkedToR213();
            var relDef = rsubsupDef.CIMSuperClassR_REL();
            var targetObjDef = rsubsupDef.LinkedFromR212().CIMSuperClassR_RTO().LinkedToR109().LinkedToR104();
            string targetClassName = GeneratorNames.GetDomainClassName(targetObjDef);
            string relVarName = GeneratorNames.GetRelLocalVariableName(relDef, targetObjDef, "");

            
            #line default
            #line hidden
            this.Write("        private ");
            
            #line 243 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetClassName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 243 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 244 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

        }
        else if (subRgo is CIMClassR_ASSR)
        {
            var rassrDef = (CIMClassR_ASSR)subRgo;
            var rassocDef = rassrDef.LinkedToR211();
            var relDef = rassocDef.CIMSuperClassR_REL();
            var raoneDef = rassocDef.LinkedFromR209();
            var raothDef = rassocDef.LinkedFromR210();

            var oneObjDef = raoneDef.CIMSuperClassR_RTO().LinkedToR109().LinkedToR104();
            var oneObjTypeName = GeneratorNames.GetDomainClassName(oneObjDef);
            var oneArgName = $"oneInstance{GeneratorNames.ToProgramAvailableString(raoneDef.Attr_Txt_Phrs)}";
            string relVarName = GeneratorNames.GetRelLocalVariableName(relDef, oneObjDef, raoneDef.Attr_Txt_Phrs);

            
            #line default
            #line hidden
            this.Write("        private ");
            
            #line 259 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneObjTypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 259 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 260 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"


            var otherObjDef = raothDef.CIMSuperClassR_RTO().LinkedToR109().LinkedToR104();
            var otherObjTypeName = GeneratorNames.GetDomainClassName(otherObjDef);
            var otherArgName = $"otherInstance{GeneratorNames.ToProgramAvailableString(raothDef.Attr_Txt_Phrs)}";
            relVarName = GeneratorNames.GetRelLocalVariableName(relDef, otherObjDef, raothDef.Attr_Txt_Phrs);

            
            #line default
            #line hidden
            this.Write("        private ");
            
            #line 267 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(otherObjTypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 267 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 268 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

        }
    }

    bool written = false;
    if (joinedRgos.Count()>0)
    {

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 277 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

    }
    foreach(var rgo in joinedRgos)
    {
        var subRgo = rgo.SubClassR205();
        if (subRgo is CIMClassR_FORM)
        {
            var rformDef = (CIMClassR_FORM)subRgo;
            var rsimpDef = rformDef.LinkedToR208();
            var relDef = rsimpDef.CIMSuperClassR_REL();
            var partDefs = rsimpDef.LinkedFromR207();
            if (partDefs.Count() > 0)
            {
                if (partDefs.Count() > 1)
                {
                    // TODO: ???
                }
                var partDef = partDefs.First();
                string methodNameLinked = GeneratorNames.GetRelationshipMethodName(relDef, "", partDef.Attr_Txt_Phrs, GeneratorNames.RelLinkMethodType.Linked);
                var targetObjDef = partDef.CIMSuperClassR_RTO().LinkedToR109().LinkedToR104();
                var targetClassName = GeneratorNames.GetDomainClassName(targetObjDef);
                string returnType = "";
                string condTargetVarName = "instance";
                string condition = GetRelCondition(rgo, targetClassName);
                string unRelCondtion = GetUnrelCondition(rgo, targetClassName, condTargetVarName);
                if (partDef.Attr_Mult == 0)
                {
                    returnType = targetClassName;
                    string methodNameLink = GeneratorNames.GetRelationshipMethodName(relDef, "", partDef.Attr_Txt_Phrs, GeneratorNames.RelLinkMethodType.Link);
                    string methodNameUnLink = GeneratorNames.GetRelationshipMethodName(relDef, "", partDef.Attr_Txt_Phrs, GeneratorNames.RelLinkMethodType.Unlink);
                    string relVarName = GeneratorNames.GetRelLocalVariableName(relDef, targetObjDef, partDef.Attr_Txt_Phrs);

            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 309 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 309 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            if (");
            
            #line 311 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            {\r\n                var candidates = instanceRepository.Get" +
                    "DomainInstances(\"");
            
            #line 313 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetObjDef.Attr_Key_Lett));
            
            #line default
            #line hidden
            this.Write("\").Where(inst=>(");
            
            #line 313 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condition));
            
            #line default
            #line hidden
            this.Write("));\r\n                ");
            
            #line 314 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 314 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(")candidates.First();\r\n            }\r\n            return ");
            
            #line 316 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(";\r\n        }\r\n\r\n        public bool ");
            
            #line 319 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLink));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 319 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetClassName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 319 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condTargetVarName));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            bool result = false;\r\n            if (");
            
            #line 322 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            {\r\n");
            
            #line 324 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                    var orefDefs = rgo.LinkedOtherSideR111();
                    foreach(var orefDef in orefDefs)
                    {
                        var thisAttrDef = orefDef.LinkedToR108().CIMSuperClassO_ATTR();
                        var tgtAttrDef = orefDef.LinkedOtherSideR111().LinkedOtherSideR110().LinkedOtherSideR105();
                        string thisAttrName = GeneratorNames.GetAttrPropertyLocalName(thisAttrDef);
                        string tgtAttrName = GeneratorNames.GetAttrPropertyName(tgtAttrDef);

            
            #line default
            #line hidden
            this.Write("                this.");
            
            #line 333 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(thisAttrName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 333 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condTargetVarName));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 333 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tgtAttrName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 334 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                    }

            
            #line default
            #line hidden
            this.Write("                result = true;\r\n            }\r\n            return result;\r\n      " +
                    "  }\r\n        public bool ");
            
            #line 341 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameUnLink));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 341 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetClassName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 341 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condTargetVarName));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            bool result = false;\r\n            if (");
            
            #line 344 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(" != null && ( ");
            
            #line 344 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(unRelCondtion));
            
            #line default
            #line hidden
            this.Write(" ))\r\n            {\r\n");
            
            #line 346 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                    foreach(var orefDef in orefDefs)
                    {
                        var thisAttrDef = orefDef.LinkedToR108().CIMSuperClassO_ATTR();
                        var tgtAttrDef = orefDef.LinkedOtherSideR111().LinkedOtherSideR110().LinkedOtherSideR105();
                        string thisAttrName = GeneratorNames.GetAttrPropertyLocalName(thisAttrDef);

            
            #line default
            #line hidden
            this.Write("                this.");
            
            #line 353 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(thisAttrName));
            
            #line default
            #line hidden
            this.Write(" = null;\r\n");
            
            #line 354 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                    }

            
            #line default
            #line hidden
            this.Write("                ");
            
            #line 357 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(" = null;\r\n                result = true;\r\n            }\r\n            return resul" +
                    "t;\r\n        }\r\n");
            
            #line 362 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                }
                else
                {
                    returnType = $"IEnumerable<{targetClassName}>";

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 368 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 368 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            ");
            
            #line 370 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" result = List<");
            
            #line 370 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetClassName));
            
            #line default
            #line hidden
            this.Write(">();\r\n            var candidates = instanceRepository.GetDomainInstances(\"");
            
            #line 371 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetObjDef.Attr_Key_Lett));
            
            #line default
            #line hidden
            this.Write("\").Where(inst=>(");
            
            #line 371 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condition));
            
            #line default
            #line hidden
            this.Write("));\r\n\r\n            foreach (var inst in candidates)\r\n            {\r\n             " +
                    "   result.Add((");
            
            #line 375 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetClassName));
            
            #line default
            #line hidden
            this.Write(")inst);\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n");
            
            #line 381 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                }
                written = true;
            }
        }
        else if (subRgo is CIMClassR_SUB)
        {
            var rsupDef = (CIMClassR_SUB)subRgo;
            var rsubsupDef = rsupDef.LinkedToR213();
            var relDef = rsubsupDef.CIMSuperClassR_REL();
            string methodNameLink = GeneratorNames.GetRelationshipMethodName(relDef, "", "", GeneratorNames.RelLinkMethodType.Link);
            string methodNameUnlink = GeneratorNames.GetRelationshipMethodName(relDef, "", "", GeneratorNames.RelLinkMethodType.Unlink);
            var targetObjDef = rsubsupDef.LinkedFromR212().CIMSuperClassR_RTO().LinkedToR109().LinkedToR104();
            string targetClassName = GeneratorNames.GetDomainClassName(targetObjDef);
            string methodNameLinked = GeneratorNames.GetGetSuperClassMethodName(relDef, objDef);
            string condTargetVarName = "instance";
            string condition = GetRelCondition(rgo, targetClassName);
            string unRelCondtion = GetUnrelCondition(rgo, targetClassName, condTargetVarName);
            string relVarName = GeneratorNames.GetRelLocalVariableName(relDef, targetObjDef, "");

            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 401 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetClassName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 401 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            if (");
            
            #line 403 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            {\r\n                var candidates = instanceRepository.Get" +
                    "DomainInstances(\"");
            
            #line 405 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetObjDef.Attr_Key_Lett));
            
            #line default
            #line hidden
            this.Write("\").Where(inst => (");
            
            #line 405 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condition));
            
            #line default
            #line hidden
            this.Write("));\r\n                ");
            
            #line 406 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 406 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetClassName));
            
            #line default
            #line hidden
            this.Write(")candidates.First();\r\n            }\r\n            return ");
            
            #line 408 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(";\r\n        }\r\n        public bool ");
            
            #line 410 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLink));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 410 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetClassName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 410 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condTargetVarName));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            bool result = false;\r\n            if (");
            
            #line 413 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            {\r\n");
            
            #line 415 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                    var orefDefs = rgo.LinkedOtherSideR111();
                    foreach(var orefDef in orefDefs)
                    {
                        var thisAttrDef = orefDef.LinkedToR108().CIMSuperClassO_ATTR();
                        var tgtAttrDef = orefDef.LinkedOtherSideR111().LinkedOtherSideR110().LinkedOtherSideR105();
                        string thisAttrName = GeneratorNames.GetAttrPropertyLocalName(thisAttrDef);
                        string tgtAttrName = GeneratorNames.GetAttrPropertyName(tgtAttrDef);

            
            #line default
            #line hidden
            this.Write("                this.");
            
            #line 424 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(thisAttrName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 424 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condTargetVarName));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 424 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tgtAttrName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 425 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                    }

            
            #line default
            #line hidden
            this.Write("                result = true;\r\n            }\r\n            return result;\r\n      " +
                    "  }\r\n        public bool ");
            
            #line 432 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameUnlink));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 432 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetClassName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 432 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condTargetVarName));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            bool result = false;\r\n            if (");
            
            #line 435 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(" != null && ( ");
            
            #line 435 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(unRelCondtion));
            
            #line default
            #line hidden
            this.Write(" ))\r\n            {\r\n");
            
            #line 437 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                    foreach(var orefDef in orefDefs)
                    {
                        var thisAttrDef = orefDef.LinkedToR108().CIMSuperClassO_ATTR();
                        var tgtAttrDef = orefDef.LinkedOtherSideR111().LinkedOtherSideR110().LinkedOtherSideR105();
                        string thisAttrName = GeneratorNames.GetAttrPropertyLocalName(thisAttrDef);

            
            #line default
            #line hidden
            this.Write("                this.");
            
            #line 444 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(thisAttrName));
            
            #line default
            #line hidden
            this.Write(" = null;\r\n");
            
            #line 445 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                    }

            
            #line default
            #line hidden
            this.Write("                ");
            
            #line 448 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(" = null;\r\n                result = true;\r\n            }\r\n            return resul" +
                    "t;\r\n        }\r\n\r\n");
            
            #line 454 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

        }
        else if (subRgo is CIMClassR_ASSR)
        {
            var rassrDef = (CIMClassR_ASSR)subRgo;
            var rassocDef = rassrDef.LinkedToR211();
            var relDef = rassocDef.CIMSuperClassR_REL();
            var raoneDef = rassocDef.LinkedFromR209();
            var raothDef = rassocDef.LinkedFromR210();
            string methodNameLink = GeneratorNames.GetRelationshipMethodName(relDef, "", "", GeneratorNames.RelLinkMethodType.Link);
            string methodNameUnlink = GeneratorNames.GetRelationshipMethodName(relDef, "", "", GeneratorNames.RelLinkMethodType.Unlink);

            string methodNameLinkedOne = GeneratorNames.GetRelationshipMethodName(relDef, "One", raoneDef.Attr_Txt_Phrs, GeneratorNames.RelLinkMethodType.Linked);
            var oneObjDef = raoneDef.CIMSuperClassR_RTO().LinkedToR109().LinkedToR104();
            var oneObjTypeName = GeneratorNames.GetDomainClassName(oneObjDef);
            var oneArgName = $"oneInstance{GeneratorNames.ToProgramAvailableString(raoneDef.Attr_Txt_Phrs)}";
            string oneCondition = GetRelCondition(rgo, oneObjTypeName);
            string oneUnRelCondtion = GetUnrelCondition(rgo, oneObjTypeName, oneArgName);
            string relOneVarName = GeneratorNames.GetRelLocalVariableName(relDef, oneObjDef, raoneDef.Attr_Txt_Phrs);

            string methodNameLinkedOther = GeneratorNames.GetRelationshipMethodName(relDef, "Other", raothDef.Attr_Txt_Phrs, GeneratorNames.RelLinkMethodType.Linked);
            var otherObjDef = raothDef.CIMSuperClassR_RTO().LinkedToR109().LinkedToR104();
            var otherObjTypeName = GeneratorNames.GetDomainClassName(otherObjDef);
            var otherArgName = $"otherInstance{GeneratorNames.ToProgramAvailableString(raothDef.Attr_Txt_Phrs)}";
            string otherCondition = GetRelCondition(rgo, otherObjTypeName);
            string otherUnRelCondtion = GetUnrelCondition(rgo, otherObjTypeName, otherArgName);
            string relOtherVarName = GeneratorNames.GetRelLocalVariableName(relDef, otherObjDef, raothDef.Attr_Txt_Phrs);

            var orefDefs = rgo.LinkedOtherSideR111();

            
            #line default
            #line hidden
            this.Write("        public bool ");
            
            #line 484 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLink));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 484 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneObjTypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 484 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneArgName));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 484 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(otherObjTypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 484 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(otherArgName));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            bool result = false;\r\n            if (");
            
            #line 487 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relOneVarName));
            
            #line default
            #line hidden
            this.Write(" == null && ");
            
            #line 487 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relOtherVarName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            {\r\n");
            
            #line 489 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

            foreach (var orefDef in orefDefs)
            {
                var thisRefAttrDef = orefDef.LinkedToR108().CIMSuperClassO_ATTR();
                var tgtRtdaDef = orefDef.LinkedOtherSideR111();
                var tgtAttrDef = tgtRtdaDef.LinkedOtherSideR110().LinkedOtherSideR105();
                var tgtObjDef = tgtAttrDef.LinkedToR102();
                var tgtObjTypeName = GeneratorNames.GetDomainClassName(tgtObjDef);
                var thisAttrPropLocalName = GeneratorNames.GetAttrPropertyLocalName(thisRefAttrDef);
                var tgtAttrPropName = GeneratorNames.GetAttrPropertyName(tgtAttrDef);
                var subRtoDef = tgtRtdaDef.LinkedOneSideR110().SubClassR204();
                if (subRtoDef is CIMClassR_AONE)
                {

            
            #line default
            #line hidden
            this.Write("                    this.");
            
            #line 503 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(thisAttrPropLocalName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 503 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneArgName));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 503 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tgtAttrPropName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 504 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                }
                else if (subRtoDef is CIMClassR_AOTH)
                {

            
            #line default
            #line hidden
            this.Write("                    this.");
            
            #line 509 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(thisAttrPropLocalName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 509 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(otherArgName));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 509 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tgtAttrPropName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 510 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                }
            }

            
            #line default
            #line hidden
            this.Write("                result = true;\r\n            }\r\n            return result;\r\n      " +
                    "  }\r\n        public bool ");
            
            #line 518 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameUnlink));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 518 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneObjTypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 518 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneArgName));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 518 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(otherObjTypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 518 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(otherArgName));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            bool result = false;\r\n            if (");
            
            #line 521 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relOneVarName));
            
            #line default
            #line hidden
            this.Write(" != null && ");
            
            #line 521 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relOtherVarName));
            
            #line default
            #line hidden
            this.Write(" != null)\r\n            {\r\n                if ((");
            
            #line 523 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneUnRelCondtion));
            
            #line default
            #line hidden
            this.Write(") && (");
            
            #line 523 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(otherUnRelCondtion));
            
            #line default
            #line hidden
            this.Write("))\r\n                {\r\n\r\n");
            
            #line 526 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

            foreach (var orefDef in orefDefs)
            {
                var thisRefAttrDef = orefDef.LinkedToR108().CIMSuperClassO_ATTR();
                var tgtRtdaDef = orefDef.LinkedOtherSideR111();
                var tgtAttrDef = tgtRtdaDef.LinkedOtherSideR110().LinkedOtherSideR105();
                var tgtObjDef = tgtAttrDef.LinkedToR102();
                var tgtObjTypeName = GeneratorNames.GetDomainClassName(tgtObjDef);
                var thisAttrPropLocalName = GeneratorNames.GetAttrPropertyLocalName(thisRefAttrDef);
                var subRtoDef = tgtRtdaDef.LinkedOneSideR110().SubClassR204();
                if (subRtoDef is CIMClassR_AONE)
                {

            
            #line default
            #line hidden
            this.Write("                    this.");
            
            #line 539 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(thisAttrPropLocalName));
            
            #line default
            #line hidden
            this.Write(" = null;\r\n");
            
            #line 540 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                }
                else if (subRtoDef is CIMClassR_AOTH)
                {

            
            #line default
            #line hidden
            this.Write("                    this.");
            
            #line 545 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(thisAttrPropLocalName));
            
            #line default
            #line hidden
            this.Write(" = null;\r\n");
            
            #line 546 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                }
            }

            
            #line default
            #line hidden
            this.Write("                    ");
            
            #line 550 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relOneVarName));
            
            #line default
            #line hidden
            this.Write(" = null;\r\n                    ");
            
            #line 551 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relOtherVarName));
            
            #line default
            #line hidden
            this.Write(" = null;\r\n\r\n                    result = true;\r\n                }\r\n            }\r" +
                    "\n            return result;\r\n        }\r\n        public ");
            
            #line 558 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneObjTypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 558 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinkedOne));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            if (");
            
            #line 560 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relOneVarName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            {\r\n                var candidates = instanceRepository.Get" +
                    "DomainInstances(\"");
            
            #line 562 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneObjDef.Attr_Key_Lett));
            
            #line default
            #line hidden
            this.Write("\").Where(inst=>(");
            
            #line 562 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneCondition));
            
            #line default
            #line hidden
            this.Write("));\r\n                ");
            
            #line 563 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relOneVarName));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 563 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneObjTypeName));
            
            #line default
            #line hidden
            this.Write(")candidates.First();\r\n            }\r\n            return ");
            
            #line 565 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relOneVarName));
            
            #line default
            #line hidden
            this.Write(";\r\n        }\r\n        public ");
            
            #line 567 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(otherObjTypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 567 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinkedOther));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            if (");
            
            #line 569 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relOtherVarName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            {\r\n                var candidates = instanceRepository.Get" +
                    "DomainInstances(\"");
            
            #line 571 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(otherObjDef.Attr_Key_Lett));
            
            #line default
            #line hidden
            this.Write("\").Where(inst=>(");
            
            #line 571 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(otherCondition));
            
            #line default
            #line hidden
            this.Write("));\r\n                ");
            
            #line 572 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relOtherVarName));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 572 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(otherObjTypeName));
            
            #line default
            #line hidden
            this.Write(")candidates.First();\r\n            }\r\n            return ");
            
            #line 574 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relOtherVarName));
            
            #line default
            #line hidden
            this.Write(";\r\n        }\r\n\r\n");
            
            #line 577 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

        }
    }

    var joinedRtos = DomainClassDefs.GetJoinedRTOs(objDef);
    if (joinedRtos.Count() > 0)
    {

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 586 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

    }
    foreach(var rto in joinedRtos)
    {
        var subRto = rto.SubClassR204();
        if (subRto is CIMClassR_PART)
        {
            var rpartDef = (CIMClassR_PART)subRto;
            var rsimpDef = rpartDef.LinkedToR207();
            var relDef = rsimpDef.CIMSuperClassR_REL();
            var rformDef = rsimpDef.LinkedFromR208();
            if (rformDef != null)
            {
                var targetObjDef = rformDef.CIMSuperClassR_RGO().CIMSuperClassR_OIR().LinkedOtherSideR201();
                string targetClassName = GeneratorNames.GetDomainClassName(targetObjDef);
                string methodNameLinked = GeneratorNames.GetRelationshipMethodName(relDef, "", rformDef.Attr_Txt_Phrs, GeneratorNames.RelLinkMethodType.Linked);
                string condition = GetRelCondition(rformDef.CIMSuperClassR_RGO(), domainClassName, false);
                string returnType = "";
                if (rformDef.Attr_Mult == 0)
                {
                    returnType = targetClassName;

            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 608 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 608 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            var candidates = instanceRepository.GetDomainInstances" +
                    "(\"");
            
            #line 610 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetObjDef.Attr_Key_Lett));
            
            #line default
            #line hidden
            this.Write("\").Where(inst=>(");
            
            #line 610 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condition));
            
            #line default
            #line hidden
            this.Write("));\r\n            return (");
            
            #line 611 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetClassName));
            
            #line default
            #line hidden
            this.Write(")candidates.First();\r\n        }\r\n");
            
            #line 613 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                }
                else
                {
                    returnType = $"IEnumerable<{targetClassName}>";

            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 619 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 619 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            var result = new List<");
            
            #line 621 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetClassName));
            
            #line default
            #line hidden
            this.Write(">();\r\n            var candidates = instanceRepository.GetDomainInstances(\"");
            
            #line 622 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetObjDef.Attr_Key_Lett));
            
            #line default
            #line hidden
            this.Write("\").Where(inst=>(");
            
            #line 622 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condition));
            
            #line default
            #line hidden
            this.Write("));\r\n            foreach (var c in candidates)\r\n            {\r\n                re" +
                    "sult.Add((");
            
            #line 625 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetClassName));
            
            #line default
            #line hidden
            this.Write(")c);\r\n            }\r\n            return result;\r\n        }\r\n");
            
            #line 629 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                }
            }
        }
        else if (subRto is CIMClassR_AONE)
        {
            var raoneDef = (CIMClassR_AONE)subRto;
            var rassocDef = raoneDef.LinkedToR209();
            var relDef = rassocDef.CIMSuperClassR_REL();
            var targetObjDef = rassocDef.LinkedFromR211().CIMSuperClassR_RGO().CIMSuperClassR_OIR().LinkedOtherSideR201();
            var raothDef = rassocDef.LinkedFromR210();
            string targetTypeName = GeneratorNames.GetDomainClassName(targetObjDef);
            string methodNameLinked = GeneratorNames.GetRelationshipMethodName(relDef,"One",raothDef.Attr_Txt_Phrs,GeneratorNames.RelLinkMethodType.Linked);
            string condition = GetRelCondition(rassocDef.LinkedFromR211().CIMSuperClassR_RGO(), domainClassName, false);
            string returnType = "";
            if (raothDef.Attr_Mult == 0)
            {
                returnType = targetTypeName;

            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 648 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 648 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            var candidates = instanceRepository.GetDomainInstances" +
                    "(\"");
            
            #line 650 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetObjDef.Attr_Key_Lett));
            
            #line default
            #line hidden
            this.Write("\").Where(inst=>(");
            
            #line 650 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condition));
            
            #line default
            #line hidden
            this.Write("));\r\n            return (");
            
            #line 651 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetTypeName));
            
            #line default
            #line hidden
            this.Write(")candidates.First();\r\n        }\r\n");
            
            #line 653 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

            }
            else
            {
                returnType = $"IEnumerable<{targetTypeName}>";

            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 659 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 659 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            var result = new List<");
            
            #line 661 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetTypeName));
            
            #line default
            #line hidden
            this.Write(">();\r\n            var candidates = instanceRepository.GetDomainInstances(\"");
            
            #line 662 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetObjDef.Attr_Key_Lett));
            
            #line default
            #line hidden
            this.Write("\").Where(inst=>(");
            
            #line 662 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condition));
            
            #line default
            #line hidden
            this.Write("));\r\n            foreach (var c in candidates)\r\n            {\r\n                re" +
                    "sult.Add((");
            
            #line 665 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetTypeName));
            
            #line default
            #line hidden
            this.Write(")c);\r\n            }\r\n            return result;\r\n        }\r\n");
            
            #line 669 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

            }
        }
        else if (subRto is CIMClassR_AOTH)
        {
            var raothDef = (CIMClassR_AOTH)subRto;
            var rassocDef = raothDef.LinkedToR210();
            var relDef = rassocDef.CIMSuperClassR_REL();
            var targetObjDef = rassocDef.LinkedFromR211().CIMSuperClassR_RGO().CIMSuperClassR_OIR().LinkedOtherSideR201();
            string targetType = GeneratorNames.GetDomainClassName(targetObjDef);
            var raoneDef = rassocDef.LinkedFromR209();
            string methodNameLinked = GeneratorNames.GetRelationshipMethodName(relDef, "Other", raoneDef.Attr_Txt_Phrs, GeneratorNames.RelLinkMethodType.Linked);
            string condition = GetRelCondition(rassocDef.LinkedFromR211().CIMSuperClassR_RGO(), domainClassName, false);
            string returnType = "";
            if (raoneDef.Attr_Mult == 0)
            {
                returnType = targetType;

            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 687 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 687 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            var candidates = instanceRepository.GetDomainInstances" +
                    "(\"");
            
            #line 689 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetObjDef.Attr_Key_Lett));
            
            #line default
            #line hidden
            this.Write("\").Where(inst=>(");
            
            #line 689 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condition));
            
            #line default
            #line hidden
            this.Write("));\r\n            return (");
            
            #line 690 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetType));
            
            #line default
            #line hidden
            this.Write(")candidates.First();\r\n        }\r\n");
            
            #line 692 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

            }
            else
            {
                returnType = $"IEnumerable<{targetType}>";

            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 698 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 698 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            var result = new List<");
            
            #line 700 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetType));
            
            #line default
            #line hidden
            this.Write(">();\r\n            var candidates = instanceRepository.GetDomainInstances(\"");
            
            #line 701 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetObjDef.Attr_Key_Lett));
            
            #line default
            #line hidden
            this.Write("\").Where(inst=>(");
            
            #line 701 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(condition));
            
            #line default
            #line hidden
            this.Write("));\r\n            foreach (var c in candidates)\r\n            {\r\n                re" +
                    "sult.Add((");
            
            #line 704 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetType));
            
            #line default
            #line hidden
            this.Write(")c);\r\n            }\r\n            return result;\r\n        }\r\n");
            
            #line 708 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

            }
        }
        else if (subRto is CIMClassR_SUPER)
        {
            var superDef = (CIMClassR_SUPER)subRto;
            var subsupDef = superDef.LinkedToR212();
            var subsupRelDef = subsupDef.CIMSuperClassR_REL();
            var subClassIFName = GeneratorNames.GetSubRelInterfaceName(subsupRelDef);
            var subClassGetMethodName = GeneratorNames.GetSubRelClassMethodName(subsupRelDef);
            var subDefs = subsupDef.LinkedFromR213();
            string subClassKeys = "";
            foreach (var subDef in subDefs)
            {
                if (!string.IsNullOrEmpty(subClassKeys))
                {
                    subClassKeys += ", ";
                }
                var subObjDef = subDef.CIMSuperClassR_RGO().CIMSuperClassR_OIR().LinkedOtherSideR201();
                subClassKeys += $"\"{subObjDef.Attr_Key_Lett}\"";
            }
            string superGetMethodName = GeneratorNames.GetGetSuperClassMethodName(subsupRelDef,objDef);

            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 731 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subClassIFName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 731 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subClassGetMethodName));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            ");
            
            #line 733 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subClassIFName));
            
            #line default
            #line hidden
            this.Write(" result = null;\r\n            var subClassKeys = new List<string>() { ");
            
            #line 734 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subClassKeys));
            
            #line default
            #line hidden
            this.Write(" };\r\n            foreach (var key in subClassKeys)\r\n            {\r\n              " +
                    "  var candidates = instanceRepository.GetDomainInstances(key).Where(inst=>((this" +
                    " == ((");
            
            #line 737 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subClassIFName));
            
            #line default
            #line hidden
            this.Write(")inst).");
            
            #line 737 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(superGetMethodName));
            
            #line default
            #line hidden
            this.Write("())));\r\n                if (candidates.Count()>0)\r\n                {\r\n           " +
                    "         result = (");
            
            #line 740 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subClassIFName));
            
            #line default
            #line hidden
            this.Write(")candidates.First();\r\n                    break;\r\n                }\r\n            " +
                    "}\r\n            return result;\r\n        }\r\n");
            
            #line 746 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                foreach(var subDef in subDefs)
                {
                    var subObjDef = subDef.CIMSuperClassR_RGO().CIMSuperClassR_OIR().LinkedOtherSideR201();
                    string methodNameLinked = GeneratorNames.GetRelationshipMethodName(subsupRelDef, "", "", GeneratorNames.RelLinkMethodType.Linked) + subObjDef.Attr_Key_Lett;
                    string returnType = GeneratorNames.GetDomainClassName(subObjDef);

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 753 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 753 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            return (");
            
            #line 755 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 755 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subClassGetMethodName));
            
            #line default
            #line hidden
            this.Write("();\r\n        }\r\n\r\n");
            
            #line 758 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                }

        }
    }
    if (hasStateMachine)
    {
        string takeEventMethodName = GeneratorNames.GetTakeEventMethodName();

            
            #line default
            #line hidden
            this.Write("        public void ");
            
            #line 767 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(takeEventMethodName));
            
            #line default
            #line hidden
            this.Write("(EventData domainEvent)\r\n        {\r\n            ");
            
            #line 769 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineLocalVariableName));
            
            #line default
            #line hidden
            this.Write(".ReceivedEvent(domainEvent).Wait();\r\n        }\r\n\r\n");
            
            #line 772 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

    }


            
            #line default
            #line hidden
            this.Write("        \r\n        public bool Validate()\r\n        {\r\n            bool isValid = t" +
                    "rue;\r\n");
            
            #line 780 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

    foreach (var rgo in joinedRgos)
    {
        var subRgo = rgo.SubClassR205();
        if (subRgo is CIMClassR_FORM)
        {
            var rformDef = (CIMClassR_FORM)subRgo;
            var rsimpDef = rformDef.LinkedToR208();
            var relDef = rsimpDef.CIMSuperClassR_REL();
            var partDefs = rsimpDef.LinkedFromR207();
            if (partDefs.Count() > 0)
            {
                if (partDefs.Count() > 1)
                {
                    // TODO: ???
                }
                var partDef = partDefs.First();
                var targetObjDef = partDef.CIMSuperClassR_RTO().LinkedToR109().LinkedToR104();
                var targetClassName = GeneratorNames.GetDomainClassName(targetObjDef);
                if (partDef.Attr_Mult == 0)
                {
                    string relVarName = GeneratorNames.GetRelLocalVariableName(relDef, targetObjDef, partDef.Attr_Txt_Phrs);
                    if (partDef.Attr_Cond==0)
                    {

            
            #line default
            #line hidden
            this.Write("            if (");
            
            #line 805 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            {\r\n                isValid = false;\r\n            }\r\n");
            
            #line 809 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                    }
                }
            }
        }
        else if (subRgo is CIMClassR_SUB)
        {
            var rsupDef = (CIMClassR_SUB)subRgo;
            var rsubsupDef = rsupDef.LinkedToR213();
            var relDef = rsubsupDef.CIMSuperClassR_REL();
            var targetObjDef = rsubsupDef.LinkedFromR212().CIMSuperClassR_RTO().LinkedToR109().LinkedToR104();
            string targetClassName = GeneratorNames.GetDomainClassName(targetObjDef);
            string relVarName = GeneratorNames.GetRelLocalVariableName(relDef, targetObjDef, "");

            
            #line default
            #line hidden
            this.Write("            if (");
            
            #line 823 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            {\r\n                isValid = false;\r\n            }\r\n");
            
            #line 827 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

        }
        else if (subRgo is CIMClassR_ASSR)
        {
            var rassrDef = (CIMClassR_ASSR)subRgo;
            var rassocDef = rassrDef.LinkedToR211();
            var relDef = rassocDef.CIMSuperClassR_REL();
            var raoneDef = rassocDef.LinkedFromR209();
            var raothDef = rassocDef.LinkedFromR210();

            var oneObjDef = raoneDef.CIMSuperClassR_RTO().LinkedToR109().LinkedToR104();
            var oneObjTypeName = GeneratorNames.GetDomainClassName(oneObjDef);
            var oneArgName = $"oneInstance{GeneratorNames.ToProgramAvailableString(raoneDef.Attr_Txt_Phrs)}";
            string relVarName = GeneratorNames.GetRelLocalVariableName(relDef, oneObjDef, raoneDef.Attr_Txt_Phrs);

            
            #line default
            #line hidden
            this.Write("            if (");
            
            #line 842 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            {\r\n                isValid = false;\r\n            }\r\n");
            
            #line 846 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"


            var otherObjDef = raothDef.CIMSuperClassR_RTO().LinkedToR109().LinkedToR104();
            var otherObjTypeName = GeneratorNames.GetDomainClassName(otherObjDef);
            var otherArgName = $"otherInstance{GeneratorNames.ToProgramAvailableString(raothDef.Attr_Txt_Phrs)}";
            relVarName = GeneratorNames.GetRelLocalVariableName(relDef, otherObjDef, raothDef.Attr_Txt_Phrs);

            
            #line default
            #line hidden
            this.Write("            if (");
            
            #line 853 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relVarName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            {\r\n                isValid = false;\r\n            }\r\n");
            
            #line 857 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

        }
    }

    foreach (var rto in joinedRtos)
    {
        var subRto = rto.SubClassR204();
        if (subRto is CIMClassR_PART)
        {
            var rpartDef = (CIMClassR_PART)subRto;
            var rsimpDef = rpartDef.LinkedToR207();
            var relDef = rsimpDef.CIMSuperClassR_REL();
            var rformDef = rsimpDef.LinkedFromR208();
            if (rformDef != null)
            {
                var targetObjDef = rformDef.CIMSuperClassR_RGO().CIMSuperClassR_OIR().LinkedOtherSideR201();
                string targetClassName = GeneratorNames.GetDomainClassName(targetObjDef);
                string methodNameLinked = GeneratorNames.GetRelationshipMethodName(relDef, "", rformDef.Attr_Txt_Phrs, GeneratorNames.RelLinkMethodType.Linked);

                if (rformDef.Attr_Mult == 0)
                {
                    if (rformDef.Attr_Cond == 0)
                    {

            
            #line default
            #line hidden
            this.Write("            if (this.");
            
            #line 881 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("() == null)\r\n            {\r\n                isValid = false;\r\n            }\r\n\r\n");
            
            #line 886 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                    }
                }
                else
                {
                    if (rformDef.Attr_Cond == 0)
                    {

            
            #line default
            #line hidden
            this.Write("            if (this.");
            
            #line 894 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("().Count() == 0)\r\n            {\r\n                isValid = false;\r\n            }\r" +
                    "\n\r\n");
            
            #line 899 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                    }
                }
            }
        }
        else if (subRto is CIMClassR_AONE)
        {
            var raoneDef = (CIMClassR_AONE)subRto;
            var rassocDef = raoneDef.LinkedToR209();
            var relDef = rassocDef.CIMSuperClassR_REL();
            var targetObjDef = rassocDef.LinkedFromR211().CIMSuperClassR_RGO().CIMSuperClassR_OIR().LinkedOtherSideR201();
            var raothDef = rassocDef.LinkedFromR210();
            string targetTypeName = GeneratorNames.GetDomainClassName(targetObjDef);
            string methodNameLinked = GeneratorNames.GetRelationshipMethodName(relDef, "One", raothDef.Attr_Txt_Phrs, GeneratorNames.RelLinkMethodType.Linked);
            string condtion = GetRelCondition(rassocDef.LinkedFromR211().CIMSuperClassR_RGO(), targetTypeName, false);
            if (raothDef.Attr_Mult == 0)
            {
                if (raothDef.Attr_Cond == 0)
                {

            
            #line default
            #line hidden
            this.Write("            if (this.");
            
            #line 919 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("() == null)\r\n            {\r\n                isValid = false;\r\n            }\r\n\r\n");
            
            #line 924 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                }
            }
            else
            {
                if (raothDef.Attr_Cond == 0)
                {

            
            #line default
            #line hidden
            this.Write("            if (this.");
            
            #line 932 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("().Count() == 0)\r\n            {\r\n                isValid = false;\r\n            }\r" +
                    "\n\r\n");
            
            #line 937 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                }
            }
        }
        else if (subRto is CIMClassR_AOTH)
        {
            var raothDef = (CIMClassR_AOTH)subRto;
            var rassocDef = raothDef.LinkedToR210();
            var relDef = rassocDef.CIMSuperClassR_REL();
            var targetObjDef = rassocDef.LinkedFromR211().CIMSuperClassR_RGO().CIMSuperClassR_OIR().LinkedOtherSideR201();
            string targetType = GeneratorNames.GetDomainClassName(targetObjDef);
            var raoneDef = rassocDef.LinkedFromR209();
            string methodNameLinked = GeneratorNames.GetRelationshipMethodName(relDef, "Other", raoneDef.Attr_Txt_Phrs, GeneratorNames.RelLinkMethodType.Linked);
            string condtion = GetRelCondition(rassocDef.LinkedFromR211().CIMSuperClassR_RGO(), targetType, false);
            if (raoneDef.Attr_Mult == 0)
            {
                if (raoneDef.Attr_Cond == 0)
                {

            
            #line default
            #line hidden
            this.Write("            if (this.");
            
            #line 956 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("() == null)\r\n            {\r\n                isValid = false;\r\n            }\r\n\r\n");
            
            #line 961 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                }
            }
            else
            {
                if (raoneDef.Attr_Cond == 0)
                {

            
            #line default
            #line hidden
            this.Write("            if (this.");
            
            #line 969 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodNameLinked));
            
            #line default
            #line hidden
            this.Write("().Count() == 0)\r\n            {\r\n                isValid = false;\r\n            }\r" +
                    "\n\r\n");
            
            #line 974 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

                }
            }
        }
        else if (subRto is CIMClassR_SUPER)
        {
            var superDef = (CIMClassR_SUPER)subRto;
            var subsupDef = superDef.LinkedToR212();
            var subsupRelDef = subsupDef.CIMSuperClassR_REL();
            var subClassIFName = GeneratorNames.GetSubRelInterfaceName(subsupRelDef);
            var subClassGetMethodName = GeneratorNames.GetSubRelClassMethodName(subsupRelDef);

            
            #line default
            #line hidden
            this.Write("            if (this.");
            
            #line 986 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subClassGetMethodName));
            
            #line default
            #line hidden
            this.Write("() == null)\r\n            {\r\n                isValid = false;\r\n            }\r\n");
            
            #line 990 "C:\Users\kae-m\source\repos\xtMULMetaModelProjects\Kae.XTUML.Tools.Generator.CodeOfDomainModel.Csharp\template\DomainClassBase.tt"

        }
    }

            
            #line default
            #line hidden
            this.Write("            return isValid;\r\n        }\r\n\r\n        public void Dispose()\r\n        " +
                    "{\r\n            instanceRepository.Delete(this);\r\n        }\r\n    }\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class DomainClassBaseBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
